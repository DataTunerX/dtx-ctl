apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    datatunerx.io/component: finetune-experiment
    datatunerx.io/part-of: datatunerx
    {{- with .Values.finetuneExperimentController.labels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  name: {{ .Values.finetuneExperimentController.name }}
  namespace: {{ .Values.finetuneExperimentController.namespace }}
  annotations:
    "helm.sh/hook": "pre-install,pre-upgrade"
    "helm.sh/hook-weight": "16"
spec:
  progressDeadlineSeconds: 600
  replicas: {{ .Values.finetuneExperimentController.replicas }}
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      datatunerx.io/component: finetune-experiment
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        datatunerx.io/component: finetune-experiment
    spec:
      containers:
      - command:
        - /manager
        name: finetune-experiment
        env:
          - name: BASE_IMAGE
            value: {{ .Values.finetuneExperimentController.environment.baseImage }}
          - name: MOUNT_PATH
            value: {{ .Values.finetuneExperimentController.environment.mountPath }}
          - name: PASSWORD
            value: {{ .Values.registry.password }}
          - name: REGISTRY_URL
            value: {{ .Values.registry.registryUrl }}
          - name: REPOSITORY_NAME
            value: {{ .Values.registry.repositoryName }}
          - name: S3_ACCESSKEYID
            value: {{ .Values.s3.accessKeyId }}
          - name: S3_BUCKET
            value: {{ .Values.s3.bucket }}
          - name: S3_ENDPOINT
            value: {{ .Values.s3.endpoint }}
          - name: S3_SECRETACCESSKEY
            value: {{ .Values.s3.secretAccessKey }}
          - name: S3_SECURE
            value: {{ .Values.s3.secure }}
          - name: USERNAME
            value: {{ .Values.registry.userName }}
        image: {{ .Values.global.registry }}/{{ .Values.global.repository }}/{{ .Values.finetuneExperimentController.image }}
        imagePullPolicy: {{ .Values.finetuneExperimentController.imagePullPolicy }}
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 8081
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 20
          successThreshold: 1
          timeoutSeconds: 1
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /readyz
            port: 8081
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: {{ .Values.finetuneExperimentController.resources.limits.cpu }}
            memory: {{ .Values.finetuneExperimentController.resources.limits.memory }}
          requests:
            cpu: {{ .Values.finetuneExperimentController.resources.requests.cpu }}
            memory: {{ .Values.finetuneExperimentController.resources.requests.memory }}
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      serviceAccountName: {{ .Values.finetuneExperimentController.serviceAccountName }}
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: {{ .Values.finetuneExperimentController.secretName }}
